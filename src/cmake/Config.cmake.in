# SNode.C - a slim toolkit for network communication
# Copyright (C) Volker Christian <me@vchrist.at>
#               2020, 2021, 2022, 2023, 2024
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU Lesser General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option) any
# later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
# details.
#
# You should have received a copy of the GNU Lesser General Public License along
# with this program. If not, see <http://www.gnu.org/licenses/>.

# ########################################################################### #
# Autogenerated list of dependencies of all targets                           #
# ########################################################################### #

@SNODEC_LIST_OF_ALL_TARGETS_DEPENDENCIES@

# ########################################################################### #
@PACKAGE_INIT@

macro(load_component_with_dependencies _comp _lspace _ladd)
    if(NOT ${_comp}_LOADED)
        if(${_comp}_DEPENDENCIES)
            list(JOIN ${_comp}_DEPENDENCIES ", " CURRENT_COMP_DEPENDENCIES)
            message("${_lspace}${_comp}: loading dependencies "
                    "\'${CURRENT_COMP_DEPENDENCIES}\'"
            )
            foreach(_depcomp ${${_comp}_DEPENDENCIES})
                load_component_with_dependencies(
                    ${_depcomp} "${_lspace}${_ladd}" "${_ladd}"
                )
            endforeach(_depcomp ${${_comp}_DEPENDENCIES})
        endif(${_comp}_DEPENDENCIES)
        include("${CMAKE_CURRENT_LIST_DIR}/snodec_${_comp}_Targets.cmake")
        include("${CMAKE_CURRENT_LIST_DIR}/snodec_${_comp}_Targets_Config.cmake"
                OPTIONAL RESULT_VARIABLE ${_comp}_TARGETS_CONFIG_FILE
        )
        message("${_lspace}${_comp}: loaded")
        if(NOT "${${_comp}_TARGETS_CONFIG_FILE}" STREQUAL "NOTFOUND")
            message("${_lspace}${_comp}: configured")
        endif(NOT "${${_comp}_TARGETS_CONFIG_FILE}" STREQUAL "NOTFOUND")
        set(${_comp}_LOADED true)
    else(NOT ${_comp}_LOADED)
        message("${_lspace}${_comp}: already loaded")
    endif(NOT ${_comp}_LOADED)
endmacro()

set(_supported_components
    core
    core-socket-stream-legacy
    core-socket-stream-tls
    net-in-stream-legacy
    net-in6-stream-legacy
    net-rc-stream-legacy
    net-l2-stream-legacy
    net-un-stream-legacy
    net-in-stream-tls
    net-in6-stream-tls
    net-rc-stream-tls
    net-l2-stream-tls
    net-un-stream-tls
    net-un-dgram
    db-mariadb
    http
    http-server
    http-client
    http-server-express
    websocket-server
    websocket-client
    mqtt
    mqtt-fast
    mqtt-server
    mqtt-client
    mqtt-server-websocket
    mqtt-client-websocket
)

foreach(_comp ${snodec_FIND_COMPONENTS})
    if(NOT _comp IN_LIST _supported_components)
        message(
            WARNING
                "Direct request for component ${_comp} not in list of supported components"
        )
        set(snodec_NOT_FOUND)
    else(NOT _comp IN_LIST _supported_components)
        load_component_with_dependencies(${_comp} "" "  ")
        check_required_components(${_comp})
    endif(NOT _comp IN_LIST _supported_components)
endforeach(_comp ${snodec_FIND_COMPONENTS})

if(NOT snodec_NOT_FOUND})
    set(CMAKE_SKIP_RPATH FALSE)
    set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)
    list(FIND CMAKE_PLATFORM_IMPLICIT_LINK_DIRECTORIES
         "${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}" isSystemDir
    )
    if("${isSystemDir}" STREQUAL "-1")
        set(CMAKE_INSTALL_RPATH
            "${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}"
        )
    endif("${isSystemDir}" STREQUAL "-1")
    set(SNODEC_SOVERSION @SNODEC_SOVERSION@)
    add_link_options(LINKER:--as-needed)
endif()
