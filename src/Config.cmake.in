@PACKAGE_INIT@

# Core
set(core-socket_DEPENDENCIES core)
set(core-socket-stream_DEPENDENCIES core-socket)
set(core-socket-stream-legacy_DEPENDENCIES core-socket-stream)
set(core-socket-stream-tls_DEPENDENCIES core-socket-stream)

# Base network code
set(net-in_DEPENDENCIES net)
set(net-in6_DEPENDENCIES net)
set(net-l2_DEPENDENCIES net)
set(net-rc_DEPENDENCIES net)
set(net-un_DEPENDENCIES net)

# Base network-stream code
set(net-in-stream_DEPENDENCIES net-in)
set(net-in6-stream_DEPENDENCIES net-in6)
set(net-l2-stream_DEPENDENCIES net-l2)
set(net-rc-stream_DEPENDENCIES net-rc)
set(net-un-stream_DEPENDENCIES net-un)

# Particular legacy network-stream code
set(net-in-stream-legacy_DEPENDENCIES net-in-stream core-socket-stream-legacy)
set(net-in6-stream-legacy_DEPENDENCIES net-in6-stream core-socket-stream-legacy)
set(net-l2-stream-legacy_DEPENDENCIES net-l2-stream core-socket-stream-legacy)
set(net-rc-stream-legacy_DEPENDENCIES net-rc-stream core-socket-stream-legacy)
set(net-un-stream-legacy_DEPENDENCIES net-un-stream core-socket-stream-legacy)

# Particular tls network-stream code
set(net-in-stream-tls_DEPENDENCIES net-in-stream core-socket-stream-tls)
set(net-in6-stream-tls_DEPENDENCIES net-in6-stream core-socket-stream-tls)
set(net-l2-stream-tls_DEPENDENCIES net-l2-stream core-socket-stream-tls)
set(net-rc-stream-tls_DEPENDENCIES net-rc-stream core-socket-stream-tls)
set(net-un-stream-tls_DEPENDENCIES net-un-stream core-socket-stream-tls)

# Base network-dgram code
set(net-un-dgram_DEPENDENCIES net-un)

# HTTP
set(http-server_DEPENDENCIES http)
set(http-client_DEPENDENCIES http)
set(http-server-express_DEPENDENCIES http-server)

# Websocket
set(websocket-server_DEPENDENCIES websocket http-server)
set(websocket-client_DEPENDENCIES websocket http-client)

# MQTT
set(mqtt-server_DEPENDENCIES mqtt)
set(mqtt-client_DEPENDENCIES mqtt)

# Database
set(db-mariadb_DEPENDENCIES core)

# core
set(core_DEPENDENCIES mux-@IO_Multiplexer@ utils)

# utils
set(utils_DEPENDENCIES logger)

macro(LOAD_COMPONENT_WITH_DEPENDENCIES _comp)
    message("Loading component: " ${_comp})
    include("${CMAKE_CURRENT_LIST_DIR}/snodec${_comp}Options.cmake" OPTIONAL
            RESULT_VARIABLE ${_comp}_OPTIONS_FILE
    )
    if(NOT "${${_comp}_OPTIONS_FILE}" STREQUAL "NOTFOUND")
        message("  " ${_comp} ": Options loaded from " ${${_comp}_OPTIONS_FILE})
    endif()
    foreach(_depcomp ${${_comp}_DEPENDENCIES})
        if("${${_depcomp}_LOADED}" STREQUAL "")
            message("  " ${_comp} " depends on " ${_depcomp} " ... loading")
            load_component_with_dependencies(${_depcomp})
        else()
            message("  " ${_comp} " depends on " ${_depcomp}
                    " ... already loaded"
            )
        endif()
    endforeach()
    include("${CMAKE_CURRENT_LIST_DIR}/snodec_${_comp}_Targets.cmake")
    set(${_comp}_LOADED true)
endmacro()

set(_supported_components
    core
    core-socket-stream-legacy
    core-socket-stream-tls
    net-in-stream-legacy
    net-in6-stream-legacy
    net-rc-stream-legacy
    net-l2-stream-legacy
    net-un-stream-legacy
    net-in-stream-tls
    net-in6-stream-tls
    net-rc-stream-tls
    net-l2-stream-tls
    net-un-stream-tls
    net-un-dgram
    db-mariadb
    http
    http-server
    http-client
    http-server-express
    websocket-server
    websocket-client
    mqtt
    mqtt-fast
    mqtt-server
    mqtt-client
)

set(snodec_FOUND True)
foreach(_comp ${snodec_FIND_COMPONENTS})
    if(NOT _comp IN_LIST _supported_components)
        set(snodec_FOUND False)
        set(snodec_NOT_FOUND_MESSAGE "Unsupported component: ${_comp}")
    else()
        load_component_with_dependencies(${_comp})
    endif()
endforeach()

add_link_options(LINKER:--as-needed)
